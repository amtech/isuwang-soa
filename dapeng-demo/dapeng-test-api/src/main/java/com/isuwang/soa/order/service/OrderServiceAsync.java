
package com.isuwang.soa.order.service;

import com.isuwang.dapeng.core.Processor;
import com.isuwang.dapeng.core.Service;
import com.isuwang.dapeng.core.SoaGlobalTransactional;

import java.util.concurrent.Future;

/**
 * Autogenerated by Dapeng-Code-Generator (1.2.2)
 * <p>
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *
 * @generated
 **/
@Service(name = "com.isuwang.soa.order.service.OrderService", version = "1.0.0")
@Processor(className = "com.isuwang.soa.order.OrderServiceAsyncCodec$Processor")
public interface OrderServiceAsync extends com.isuwang.dapeng.core.definition.AsyncService {

    /**
     *
     **/


    Future<Void> createOrder(com.isuwang.soa.order.domain.Order order, long timeout) throws com.isuwang.dapeng.core.SoaException;


    /**
     *
     **/


    Future<com.isuwang.soa.order.domain.Order> getOrderById(Integer orderId, long timeout) throws com.isuwang.dapeng.core.SoaException;


}
      